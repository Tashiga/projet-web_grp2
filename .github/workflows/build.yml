name: Build NestJS Project

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install Nest CLI globally
      run: npm install -g @nestjs/cli

    - name: Install dependencies
      run: npm install
      working-directory: ./back

    - name: Build project
      run: npm run build
      working-directory: ./back

    - name: Install Newman
      run: npm install -g newman
      working-directory: ./back

    - name: Run Postman tests with Newman
      run: newman run postman_collection.json
      working-directory: ./back
      
    - name: Run tests
      run: npm run test
      working-directory: ./back

  docker: 
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-nestjs-app .
      working-directory: ./back

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/my-nestjs-app
      working-directory: ./back

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
    - name: Deploy to Render
      run: |
        curl -X POST https://api.render.com/deploy/srv-cppvfdo8fa8c739n3flg \
        -H 'Authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        --data '{}'

    - name: Clean up
      run: docker image prune -f
      working-directory: ./back
